services:
  keycloak:
    image: quay.io/keycloak/keycloak:26.0.5
    environment:
      - KC_DB=postgres  #Uses Postgres for DB
      - KC_DB_URL=jdbc:postgresql://db:5432/keycloak
      - KC_DB_USERNAME=${KC_DB_USERNAME}
      - KC_FEATURES=hostname:v2    # Add other features as necessary see docs
      - KC_DB_PASSWORD=${KC_DB_PASSWORD}
      - KC_HOSTNAME=ca.baibaomen.com
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KC_HTTP_PORT=8080
      - KC_HTTP_ENABLED=true
      - KC_HEALTH_ENABLED=false   # Enable health as needed see docs
      - KC_PROXY_HEADERS=xforwarded #forwarded #CAUTION see docs on forwarding
      - KC_LOG=console  # See docs on logs
      - KC_LOG_LEVEL=WARN  # For debugging set to DEBUG see docs on logs
      - KC_HOSTNAME_STRICT=true
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-net"
      - "traefik.http.routers.keycloak-http.entrypoints=web"
      - "traefik.http.routers.keycloak-http.rule=Host(`ca.baibaomen.com`)"
      - "traefik.http.routers.keycloak-http.middlewares=redirect-to-https"
      - "traefik.http.routers.keycloak-http.service=noop@internal"
      - "traefik.http.routers.keycloak-https.entrypoints=websecure"
      - "traefik.http.routers.keycloak-https.rule=Host(`ca.baibaomen.com`)"
      - "traefik.http.routers.keycloak-https.tls.certresolver=myresolver"
      - "traefik.http.middlewares.keycloak-headers.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.routers.keycloak-https.middlewares=keycloak-headers@docker"
      - "traefik.http.services.keycloak-backend.loadbalancer.server.scheme=http"
      - "traefik.http.services.keycloak-backend.loadbalancer.server.port=8080"
    networks:
      - traefik-net
    volumes:
      # [修改] 将主题文件存储在项目目录下
      - ./keycloak/themes:/opt/keycloak/themes
      # [新增] 存储其他Keycloak数据
      - ./keycloak/data:/opt/keycloak/data
    depends_on:
      - db
    command: start
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=${KC_DB_USERNAME}
      - POSTGRES_PASSWORD=${KC_DB_PASSWORD}
    volumes:
      # [修改] 将所有PostgreSQL相关文件存储在项目目录下
      - ./postgres/conf/pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
      - ./postgres/conf/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./postgres/data:/var/lib/postgresql/data
    networks:
      - traefik-net
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${KC_DB_USERNAME} -d keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  traefik-net:
    external: true
